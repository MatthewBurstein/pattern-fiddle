!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3);t.squareStates=[r.SquareState.LIGHT,r.SquareState.TRANSITION_FROM_LIGHT,r.SquareState.TRANSITION_TO_DARK,r.SquareState.DARK,r.SquareState.TRANSITION_FROM_DARK,r.SquareState.TRANSITION_TO_LIGHT],t.width=window.innerWidth,t.height=window.innerHeight,t.numberOfColumns=12,t.dimension=t.width/t.numberOfColumns,t.canvas=document.getElementById("canvas"),t.canvas.width=t.width,t.canvas.height=t.height,t.numberOfRows=Math.ceil(t.height/t.dimension),t.interval=5.5},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(0),a={offset:0,squares:Array(i.numberOfColumns).fill(void 0).map((function(e,t){return Array(i.numberOfRows).fill(void 0).map((function(e,n){return{colorIndex:o(t,n),squareState:i.squareStates[0],locked:!1,overlayWidth:i.dimension}}))}))};function o(e,t){return e%2==0?t%2==0?0:1:t%2==0?2:3}function u(e){var t=(i.squareStates.findIndex((function(t){return t===e.squareState}))+1)%i.squareStates.length;e.squareState=i.squareStates[t],e.locked=r.isTransitionState(e)}t.getGlobalState=function(){return a},t.moveSquares=function(e){var t;!function(e){a.offset=e}((e.offset+1)%i.width),t=a.squares.map((function(e){return e.map((function(e){return r.isTransitionFromState(e)?function(e){return e.overlayWidth>0?e.overlayWidth--:u(e),e}(e):r.isTransitionToState(e)?function(e){return e.overlayWidth<i.dimension?e.overlayWidth++:u(e),e}(e):e}))})),a.squares=t},t.handleMouseMove=function(e,t){var n=function(e,t,n){var r=e-n,a=r>=0?r:r+i.width,o=Math.floor(a/i.dimension),u=Math.floor(t/i.dimension);return[o,u]}(e,t,a.offset),r=n[0],o=n[1],s=a.squares[r][o];s.locked||u(s)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3);t.isTransitionState=function(e){return[r.SquareState.TRANSITION_FROM_DARK,r.SquareState.TRANSITION_FROM_LIGHT,r.SquareState.TRANSITION_TO_LIGHT,r.SquareState.TRANSITION_TO_DARK].includes(e.squareState)},t.isTransitionFromState=function(e){return[r.SquareState.TRANSITION_FROM_DARK,r.SquareState.TRANSITION_FROM_LIGHT].includes(e.squareState)},t.isTransitionToState=function(e){return[r.SquareState.TRANSITION_TO_LIGHT,r.SquareState.TRANSITION_TO_DARK].includes(e.squareState)},t.hasLightPrimaryPalette=function(e){return[r.SquareState.LIGHT,r.SquareState.TRANSITION_FROM_LIGHT,r.SquareState.TRANSITION_TO_LIGHT].includes(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.LIGHT="light",e.TRANSITION_FROM_LIGHT="transitionFromLight",e.TRANSITION_TO_DARK="transitionToDark",e.DARK="dark",e.TRANSITION_FROM_DARK="transitionFromDark",e.TRANSITION_TO_LIGHT="transitionToLight"}(t.SquareState||(t.SquareState={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(5)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);n(6).startSquareAnimation(),window.addEventListener("mousemove",(function(e){var t=e.clientX,n=e.clientY;r.handleMouseMove(t,n)})),window.addEventListener("touchstart",(function(e){var t=e.touches[0],n=t.pageX,i=t.pageY;r.handleMouseMove(n,i)})),window.addEventListener("touchmove",(function(e){var t=e.touches[0],n=t.pageX,i=t.pageY;r.handleMouseMove(n,i)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(0),a=n(7),o=n(1),u=r.canvas.getContext("2d");function s(e){u.clearRect(0,0,i.width,i.height);var t=e.squares,n=e.offset;return t.map((function(e,t){var r=n+t*i.dimension,a=r-(r>=i.width?i.width:0),o=a>i.width-i.dimension;return e.map((function(e,t){return o?function(e,t,n){var r=e.colorIndex,a=e.overlayWidth,o=e.squareState,u=n*i.dimension,s=i.dimension/2-a/2,d=t+s;l(t,u,i.dimension,r),c(d,u,a,r,o);var f=(i.dimension-(i.width-t))%i.width;l(0,u,f,r);var S=i.dimension-f,T=i.dimension/2-a/2,v=f>T;c(v?s-S:0,u,v?a:a-S,r,o)}(e,r,t):function(e,t,n){var r=e.colorIndex,a=e.overlayWidth,o=n*i.dimension,u=t+i.dimension/2-a/2;l(t,o,i.dimension,r),c(u,o,a,e.colorIndex,e.squareState)}(e,a,t),e}))})),e}function c(e,t,n,r,o){u.globalAlpha=.95,u.fillStyle=function(e,t){return a.getOverlayPalette(t,e)}(r,o),u.fillRect(e,t,n,i.dimension)}function l(e,t,n,r){u.globalAlpha=1,u.fillStyle=a.getBaseColor(r),u.fillRect(e,t,n,i.dimension)}t.paint=s,t.startSquareAnimation=function(){var e=o.getGlobalState();!function t(){setTimeout((function(){s(e),o.moveSquares(e),t()}),i.interval)}()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=Object.freeze(["#EAE8E3","#C9C3C1","#C2C1C9","#FFFCF2"]),a=Object.freeze(["#EAE0CC","#C9ADA1","#ADA7C9","#FFF3BB"]),o=Object.freeze(["#84775E","#7C3A2A","#492A91","#D8C158"]);t.getOverlayPalette=function(e,t){return(r.hasLightPrimaryPalette(e)?a:o)[t]},t.getBaseColor=function(e){return i[e]}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,