$largeCircleRadius: 40px;
$minCircleContainer: 0;
$maxCircleContainer: 9;
$firstCircleNumber: 1;
$lastCircleNumber: 6;

@mixin circles-container($circlesContainerNumber) {
  display: flex;
  flex-direction: column-reverse;
  align-items: center;
  padding-bottom: calc(50vh + 80px);
  transform: rotate(calc(#{$circlesContainerNumber * 36deg}));
  position: absolute;
  top: 0;
  left: calc(50vw - #{$largeCircleRadius});
  width: calc(2 * #{$largeCircleRadius});
  height: 100vh;
}

@for $i from $minCircleContainer through $maxCircleContainer {
  .circles-container-#{$i} {
    @include circles-container($i)
  }
}

@mixin circle($circleNumber) {
  $circleRadius: calc(0.9 * #{$largeCircleRadius} / #{$circleNumber});
  margin-bottom: $circleNumber * 4px;
  width: calc(#{$circleRadius} * 2);
  height: calc(#{$circleRadius} * 2);
  background-color: green;
  opacity: 0.5;
  border-radius: $circleRadius;
  mix-blend-mode: difference;
}

@for $i from $firstCircleNumber through $lastCircleNumber {
  .circle-#{$i} {
    @include circle($i)
  }
}

@function triangular($value) {
  $result: 0;
  @if $value == 0 {
    @return $result;
  }
  @for $index from 1 through $value {
    $result: $result + $index;
  }
  @return $result;
}